{ parameter
    (or (or (or %admin (address %change_admin) (unit %confirm_new_admin))
            (or %plan (nat %change_duration) (nat %update_plan)))
        (or %wallet (or (unit %claim) (nat %stake)) (nat %withdraw))) ;
  storage
    (pair (pair (pair (pair %admin (address %address) (option %pending_admin address))
                      (big_map %delegators address (pair (nat %reward_per_token_paid) (nat %unpaid))))
                (pair (pair %ledger (big_map %balances address nat) (nat %total_supply))
                      (big_map %metadata string bytes)))
          (pair (pair %reward
                   (pair (nat %accumulated_reward_per_token) (nat %last_block_update))
                   (pair (nat %period_end) (nat %reward_per_block)))
                (pair %settings
                   (pair (nat %duration) (address %reserve_contract))
                   (pair %staked_token address nat)))) ;
  code { LAMBDA
           (pair (pair address address) (pair (pair address nat) nat))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE
               { DROP 4 ; PUSH string "not_fa2" ; FAILWITH }
               { PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 DIG 5 ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 7 ;
                 DIG 6 ;
                 DIG 7 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS } } ;
         PUSH string "BAD_AMOUNT" ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH string "NEGATIVE_BALANCE" ; FAILWITH } {} } ;
         LAMBDA
           (pair nat string)
           nat
           { UNPAIR ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; FAILWITH } { SWAP ; DROP } } ;
         PUSH nat 1000000 ;
         LAMBDA
           (pair (pair nat nat) (pair nat nat))
           nat
           { DUP ;
             CDR ;
             CAR ;
             LEVEL ;
             COMPARE ;
             GT ;
             IF { CDR ; CAR } { DROP ; LEVEL } } ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair (pair nat nat) (pair nat nat)) nat) nat)
                 (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                             (pair (pair (big_map address nat) nat) (big_map string bytes)))
                       (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat)))))
           (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                       (pair (pair (big_map address nat) nat) (big_map string bytes)))
                 (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat))))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PUSH nat 0 ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DROP ; DIG 3 ; DROP }
                { DUP ;
                  CAR ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DUP 6 ;
                  SWAP ;
                  EXEC ;
                  SUB ;
                  ABS ;
                  DIG 2 ;
                  DIG 5 ;
                  DUP 4 ;
                  CDR ;
                  CDR ;
                  DIG 3 ;
                  MUL ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CAR ;
                  ADD ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  DIG 2 ;
                  CAR ;
                  CDR ;
                  DIG 2 ;
                  PAIR ;
                  PAIR } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair address (big_map address nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair address (big_map address (pair nat nat)))
           (pair nat nat)
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 ; PUSH nat 0 ; PAIR } {} } ;
         DUP 6 ;
         DIG 4 ;
         PAIR ;
         LAMBDA
           (pair (pair nat (lambda (pair nat nat) nat))
                 (pair (pair nat (pair nat nat)) (pair (pair nat nat) (pair nat nat))))
           nat
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 3 ;
             DUP 3 ;
             CAR ;
             DIG 4 ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             SWAP ;
             CDR ;
             ADD } ;
         SWAP ;
         APPLY ;
         DUP 4 ;
         DUP 4 ;
         DUP 4 ;
         DUP 4 ;
         PAIR 4 ;
         LAMBDA
           (pair (pair (lambda (pair (pair nat (pair nat nat)) (pair (pair nat nat) (pair nat nat))) nat)
                       (pair (lambda (pair address (big_map address (pair nat nat))) (pair nat nat))
                             (pair (lambda (pair address (big_map address nat)) nat)
                                   (lambda
                                      (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                                                  (pair (pair (big_map address nat) nat) (big_map string bytes)))
                                            (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat))))
                                      (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                                                  (pair (pair (big_map address nat) nat) (big_map string bytes)))
                                            (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat))))))))
                 (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                             (pair (pair (big_map address nat) nat) (big_map string bytes)))
                       (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat)))))
           (pair nat
                 (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                             (pair (pair (big_map address nat) nat) (big_map string bytes)))
                       (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat)))))
           { UNPAIR ;
             UNPAIR 4 ;
             DIG 4 ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             SENDER ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP ;
             DUG 2 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             SENDER ;
             PAIR ;
             DIG 5 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             CDR ;
             CAR ;
             SWAP ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             DUP 3 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             SOME ;
             SENDER ;
             UPDATE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP 3 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DIG 3 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                       (pair (pair (big_map address nat) nat) (big_map string bytes)))
                 (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat))))
           (pair (pair (pair (pair address (option address)) (big_map address (pair nat nat)))
                       (pair (pair (big_map address nat) nat) (big_map string bytes)))
                 (pair (pair (pair nat nat) (pair nat nat)) (pair (pair nat address) (pair address nat))))
           { DUP ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { DROP ; PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} } ;
         DIG 10 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 3 ;
             DROP ;
             DIG 5 ;
             DROP ;
             DIG 6 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     SOME ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DROP ;
                     SWAP ;
                     DROP ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     IF_NONE
                       { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         DROP ;
                         SENDER ;
                         SWAP ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "NOT_PENDING_ADMIN" ; FAILWITH }
                            { NONE address ; SENDER ; PAIR } ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     NIL operation ;
                     PAIR } }
               { SWAP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     PUSH string "BAD_DURATION" ;
                     SWAP ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     UNPAIR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 4 ;
                     SWAP ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     LEVEL ;
                     COMPARE ;
                     LT ;
                     IF { DROP 2 ; PUSH string "DISTRIBUTION_RUNNING" ; FAILWITH }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          DUP ;
                          CDR ;
                          LEVEL ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          CDR ;
                          LEVEL ;
                          DUP 5 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          ADD ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DUP 3 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          DIG 2 ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR } ;
                     DUP ;
                     DIG 2 ;
                     SWAP ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CONTRACT %claim_fees nat ;
                     IF_NONE { PUSH string "not_reserve_contract" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { DIG 8 ;
                 DROP ;
                 IF_LEFT
                   { DROP ;
                     SWAP ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 5 ;
                     DROP ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ; NIL operation ; PAIR }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          PUSH nat 0 ;
                          DUP 4 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          SOME ;
                          SENDER ;
                          UPDATE ;
                          SWAP ;
                          SENDER ;
                          DUP 4 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CONTRACT %transfer_to_delegator (pair (address %to_) (nat %amount)) ;
                          IF_NONE
                            { DROP 2 ; PUSH string "not_reserve_contract" ; FAILWITH }
                            { PUSH mutez 0 ; DIG 2 ; DIG 3 ; SWAP ; PAIR ; TRANSFER_TOKENS } ;
                          DUP 3 ;
                          CDR ;
                          DUP 4 ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          DIG 2 ;
                          CONS ;
                          PAIR } }
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 4 ;
                     SWAP ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     DIG 2 ;
                     DUP 3 ;
                     CAR ;
                     DUP 3 ;
                     DIG 2 ;
                     ADD ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     SWAP ;
                     DUP 3 ;
                     CDR ;
                     ADD ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     DUG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     SELF_ADDRESS ;
                     SENDER ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 5 ;
                 SWAP ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 UNPAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP 4 ;
                 DIG 2 ;
                 DUP 3 ;
                 CAR ;
                 DUP 3 ;
                 DIG 2 ;
                 PAIR ;
                 DUP 7 ;
                 SWAP ;
                 EXEC ;
                 SOME ;
                 SENDER ;
                 UPDATE ;
                 SWAP ;
                 DUP 3 ;
                 CDR ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 DUG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 SENDER ;
                 SELF_ADDRESS ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } } } }

