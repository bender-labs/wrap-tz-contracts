{ parameter
    (or (or (or %admin
               (or (pair %change_quorum nat (map string key)) (nat %change_threshold))
               (or (unit %confirm_admin) (address %set_admin)))
            (or %fees
               (pair %distribute_tokens_with_quorum
                  (address %minter_contract)
                  (list %tokens (pair address nat)))
               (address %distribute_xtz_with_quorum)))
        (or (pair %minter
               (pair %action
                  (or %entrypoint
                     (or (pair %add_erc20 (bytes %eth_contract) (pair %token_address address nat))
                         (pair %add_erc721 (bytes %eth_contract) (address %token_contract)))
                     (or (pair %mint_erc20
                            (bytes %erc_20)
                            (pair (pair %event_id (bytes %block_hash) (nat %log_index))
                                  (pair (address %owner) (nat %amount))))
                         (pair %mint_erc721
                            (bytes %erc_721)
                            (pair (pair %event_id (bytes %block_hash) (nat %log_index))
                                  (pair (address %owner) (nat %token_id))))))
                  (address %target))
               (list %signatures (pair string signature)))
            (pair %set_signer_payment_address
               (address %minter_contract)
               (pair (string %signer_id) (signature %signature))))) ;
  storage
    (pair (pair (pair (address %admin) (map %counters string nat))
                (pair (big_map %metadata string bytes) (option %pending_admin address)))
          (pair (map %signers string key) (nat %threshold))) ;
  code { LAMBDA
           (pair (pair (pair address (map string nat)) (pair (big_map string bytes) (option address)))
                 (pair (map string key) nat))
           unit
           { SENDER ;
             SWAP ;
             CAR ;
             CAR ;
             CAR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_ADMIN" ; FAILWITH } { PUSH unit Unit } } ;
         LAMBDA
           unit
           unit
           { DROP ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF { PUSH string "FORBIDDEN_XTZ" ; FAILWITH } { PUSH unit Unit } } ;
         LAMBDA
           address
           (contract (or (pair (list key_hash) (list (pair address nat))) (list key_hash)))
           { CONTRACT %oracle
               (or (pair %distribute_tokens (list %signers key_hash) (list %tokens (pair address nat)))
                   (list %distribute_xtz key_hash)) ;
             IF_NONE { PUSH string "BAD_CONTRACT_TARGET" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair (pair address (map string nat)) (pair (big_map string bytes) (option address)))
                 (pair (map string key) nat))
           (list key_hash)
           { NIL key_hash ; SWAP ; CDR ; CAR ; ITER { CDR ; HASH_KEY ; CONS } } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 PUSH unit Unit ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         DUP ;
                         UNPAIR ;
                         PUSH nat 1 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         DUP 3 ;
                         SIZE ;
                         DIG 2 ;
                         COMPARE ;
                         GT ;
                         OR ;
                         IF { DROP ; PUSH string "BAD_QUORUM" ; FAILWITH }
                            { EMPTY_SET key_hash ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              ITER { CDR ; HASH_KEY ; PUSH bool True ; SWAP ; UPDATE } ;
                              SWAP ;
                              SIZE ;
                              SWAP ;
                              SIZE ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "BAD_QUORUM" ; FAILWITH } {} } ;
                         UNPAIR ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         PUSH nat 1 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LT ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         SIZE ;
                         DUP 3 ;
                         COMPARE ;
                         GT ;
                         OR ;
                         IF { DROP 2 ; PUSH string "BAD_QUORUM" ; FAILWITH }
                            { SWAP ; DUP ; DUG 2 ; CDR ; CAR ; PAIR ; SWAP ; CAR ; PAIR } } }
                   { IF_LEFT
                       { DROP ;
                         SWAP ;
                         DROP ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         IF_NONE
                           { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                           { SENDER ;
                             SWAP ;
                             COMPARE ;
                             EQ ;
                             IF { DUP ;
                                  CDR ;
                                  NONE address ;
                                  DUP 3 ;
                                  CAR ;
                                  CDR ;
                                  CAR ;
                                  PAIR ;
                                  DIG 2 ;
                                  CAR ;
                                  CAR ;
                                  PAIR ;
                                  PAIR ;
                                  DUP ;
                                  CDR ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  CAR ;
                                  CDR ;
                                  DIG 2 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  SENDER ;
                                  PAIR ;
                                  PAIR ;
                                  PAIR }
                                { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR } } ;
                 NIL operation ;
                 PAIR }
               { DIG 5 ;
                 DROP ;
                 PUSH unit Unit ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     DIG 3 ;
                     CDR ;
                     SWAP ;
                     PAIR ;
                     LEFT (list key_hash) ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     RIGHT (pair (list key_hash) (list (pair address nat))) ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 3 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DIG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SIZE ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "MISSING_SIGNATURES" ; FAILWITH } {} ;
                 DUP ;
                 CAR ;
                 SELF_ADDRESS ;
                 CHAIN_ID ;
                 PAIR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 DIG 3 ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 DIG 2 ;
                 PACK ;
                 DIG 2 ;
                 UNPAIR ;
                 PUSH nat 0 ;
                 DIG 4 ;
                 ITER { UNPAIR ;
                        DUP 5 ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "SIGNER_UNKNOWN" ; FAILWITH } {} ;
                        DUP 6 ;
                        DUG 2 ;
                        CHECK_SIGNATURE ;
                        IF { PUSH nat 1 ; ADD } {} } ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "BAD_SIGNATURE" ; FAILWITH } {} ;
                 CAR ;
                 DUP ;
                 CDR ;
                 CONTRACT %signer
                   (or (or (pair %add_erc20 (bytes %eth_contract) (pair %token_address address nat))
                           (pair %add_erc721 (bytes %eth_contract) (address %token_contract)))
                       (or (pair %mint_erc20
                              (bytes %erc_20)
                              (pair (pair %event_id (bytes %block_hash) (nat %log_index))
                                    (pair (address %owner) (nat %amount))))
                           (pair %mint_erc721
                              (bytes %erc_721)
                              (pair (pair %event_id (bytes %block_hash) (nat %log_index))
                                    (pair (address %owner) (nat %token_id)))))) ;
                 IF_NONE { PUSH string "BAD_CONTRACT_TARGET" ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 AMOUNT ;
                 DIG 3 ;
                 CAR ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 PAIR }
               { PUSH unit Unit ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 GET ;
                 IF_NONE { PUSH string "UNKNOWN_SIGNER" ; FAILWITH } {} ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 GET 3 ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 SENDER ;
                 DUP 4 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 SELF_ADDRESS ;
                 CHAIN_ID ;
                 PAIR ;
                 PAIR ;
                 PACK ;
                 DUP 4 ;
                 GET 4 ;
                 DUP 4 ;
                 CHECK_SIGNATURE ;
                 NOT ;
                 IF { DROP 4 ; PUSH string "BAD_SIGNATURE" ; FAILWITH }
                    { DUP 3 ;
                      CAR ;
                      CONTRACT %signer_ops (pair (key_hash %signer) (address %payment_address)) ;
                      IF_NONE { PUSH string "BAD_CONTRACT_TARGET" ; FAILWITH } {} ;
                      DIG 2 ;
                      HASH_KEY ;
                      SENDER ;
                      SWAP ;
                      PAIR ;
                      SWAP ;
                      PUSH mutez 0 ;
                      DIG 2 ;
                      TRANSFER_TOKENS ;
                      DUP 4 ;
                      CDR ;
                      DUP 5 ;
                      CAR ;
                      CDR ;
                      DUP 6 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      PUSH nat 1 ;
                      DIG 5 ;
                      ADD ;
                      SOME ;
                      DIG 5 ;
                      GET 3 ;
                      UPDATE ;
                      DIG 4 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      NIL operation ;
                      DIG 2 ;
                      CONS ;
                      PAIR } } } } }

