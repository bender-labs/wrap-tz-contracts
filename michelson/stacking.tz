{ parameter
    (or (or (or %admin (address %change_admin) (unit %confirm_new_admin))
            (or %fees
               (or (nat %set_blocks_per_cycle) (nat %set_default_fees))
               (map %set_fees_per_cycles nat nat)))
        (or (or %plan (nat %change_duration) (nat %update_plan))
            (or %wallet
               (or (unit %claim) (nat %stake))
               (pair %withdraw (nat %stake_index) (nat %amount))))) ;
  storage
    (pair (pair (pair (pair %admin (address %address) (option %pending_admin address))
                      (pair %fees
                         (pair (nat %blocks_per_cycle) (address %burn_address))
                         (pair (nat %default_fees) (map %fees_per_cycles nat nat))))
                (pair (pair %ledger
                         (big_map %delegators
                            address
                            (pair (pair (pair (nat %balance) (nat %counter))
                                        (pair (nat %reward_per_token_paid) (map %stakes nat (pair (nat %amount) (nat %level)))))
                                  (nat %unpaid)))
                         (nat %total_supply))
                      (big_map %metadata string bytes)))
          (pair (pair %reward
                   (pair (pair (nat %accumulated_reward_per_token) (nat %exponent))
                         (pair (nat %last_block_update) (nat %period_end)))
                   (pair (nat %reward_per_block) (nat %reward_remainder)))
                (pair %settings
                   (pair (nat %duration) (address %reserve_contract))
                   (pair (pair %reward_token address nat) (pair %staked_token address nat))))) ;
  code { LAMBDA
           (pair (pair address address) (pair (pair address nat) nat))
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE
               { DROP 4 ; PUSH string "not_fa2" ; FAILWITH }
               { PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 DIG 5 ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 7 ;
                 DIG 6 ;
                 DIG 7 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS } } ;
         PUSH string "BAD_AMOUNT" ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH string "NEGATIVE_BALANCE" ; FAILWITH } {} } ;
         LAMBDA
           (pair nat string)
           nat
           { UNPAIR ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; FAILWITH } { SWAP ; DROP } } ;
         LAMBDA
           (pair nat nat)
           nat
           { UNPAIR ;
             PUSH nat 1 ;
             DUG 2 ;
             PAIR ;
             PAIR ;
             LEFT nat ;
             LOOP_LEFT
               { UNPAIR ;
                 UNPAIR ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                    { PUSH nat 1 ;
                      DUP 3 ;
                      COMPARE ;
                      EQ ;
                      IF { SWAP ; DROP ; MUL ; RIGHT (pair (pair nat nat) nat) }
                         { PUSH nat 2 ;
                           DUP 3 ;
                           EDIV ;
                           IF_NONE
                             { DROP 3 ; PUSH string "bad_scale" ; FAILWITH }
                             { UNPAIR ;
                               PUSH nat 0 ;
                               DIG 2 ;
                               COMPARE ;
                               EQ ;
                               IF { DIG 2 ; DROP ; DIG 2 ; SWAP ; DIG 2 ; DUP ; MUL ; PAIR ; PAIR ; LEFT nat }
                                  { DROP ;
                                    DUP ;
                                    DIG 3 ;
                                    MUL ;
                                    PUSH nat 2 ;
                                    PUSH nat 1 ;
                                    DIG 4 ;
                                    SUB ;
                                    ABS ;
                                    EDIV ;
                                    IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                    CAR ;
                                    DIG 2 ;
                                    DUP ;
                                    MUL ;
                                    PAIR ;
                                    PAIR ;
                                    LEFT nat } } } } } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair nat nat) nat) (pair (pair nat nat) nat))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             SWAP ;
             DIG 2 ;
             SUB ;
             ABS ;
             PUSH nat 10 ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             SWAP ;
             MUL } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                       (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                   nat)
                             (big_map string bytes)))
                 (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                       (pair (pair nat address) (pair (pair address nat) (pair address nat)))))
           (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                       (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                   nat)
                             (big_map string bytes)))
                 (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                       (pair (pair nat address) (pair (pair address nat) (pair address nat)))))
           { DUP ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             LEVEL ;
             COMPARE ;
             GT ;
             IF { DUP ; CAR ; CDR ; CDR } { LEVEL } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             SUB ;
             ABS ;
             PUSH nat 0 ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             IF { DIG 3 ;
                  DROP ;
                  DUP 3 ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 3 ;
                  PAIR ;
                  DUP 4 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  DUP 3 ;
                  CDR ;
                  CAR ;
                  DIG 2 ;
                  MUL ;
                  DIG 2 ;
                  CDR ;
                  CDR ;
                  ADD ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR }
                { DIG 3 ;
                  DUP 4 ;
                  CDR ;
                  CAR ;
                  DIG 2 ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  DUP 3 ;
                  CAR ;
                  CAR ;
                  CAR ;
                  ADD ;
                  DUP 3 ;
                  CDR ;
                  DUP 4 ;
                  CAR ;
                  CDR ;
                  DIG 4 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  PAIR ;
                  PAIR ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CAR ;
                  CDR ;
                  CDR ;
                  DIG 3 ;
                  PAIR ;
                  DIG 2 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             SWAP ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR } ;
         PUSH nat 24 ;
         LAMBDA
           (pair address
                 (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat)))
           (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat)
           { UNPAIR ;
             GET ;
             IF_NONE
               { PUSH nat 0 ;
                 EMPTY_MAP nat (pair nat nat) ;
                 PUSH nat 0 ;
                 PAIR ;
                 PUSH nat 0 ;
                 PUSH nat 0 ;
                 PAIR ;
                 PAIR ;
                 PAIR }
               {} } ;
         DUP 7 ;
         LAMBDA
           (pair (lambda (pair nat nat) nat)
                 (pair (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat)
                       (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))))
           nat
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             DIG 2 ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             MUL ;
             SWAP ;
             CDR ;
             ADD } ;
         SWAP ;
         APPLY ;
         DUP 4 ;
         DUP 3 ;
         DUP 3 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat)
                                (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat)))
                          nat)
                       (pair (lambda
                                (pair address
                                      (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat)))
                                (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                             (lambda
                                (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                                            (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                                        nat)
                                                  (big_map string bytes)))
                                      (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                                            (pair (pair nat address) (pair (pair address nat) (pair address nat)))))
                                (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                                            (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                                        nat)
                                                  (big_map string bytes)))
                                      (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                                            (pair (pair nat address) (pair (pair address nat) (pair address nat))))))))
                 (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                             (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                         nat)
                                   (big_map string bytes)))
                       (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                             (pair (pair nat address) (pair (pair address nat) (pair address nat))))))
           (pair (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat)
                 (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                             (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                         nat)
                                   (big_map string bytes)))
                       (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                             (pair (pair nat address) (pair (pair address nat) (pair address nat))))))
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             SENDER ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             SWAP ;
             CAR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             CDR ;
             DIG 3 ;
             CDR ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                       (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                   nat)
                             (big_map string bytes)))
                 (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                       (pair (pair nat address) (pair (pair address nat) (pair address nat)))))
           (pair (pair (pair (pair address (option address)) (pair (pair nat address) (pair nat (map nat nat))))
                       (pair (pair (big_map address (pair (pair (pair nat nat) (pair nat (map nat (pair nat nat)))) nat))
                                   nat)
                             (big_map string bytes)))
                 (pair (pair (pair (pair nat nat) (pair nat nat)) (pair nat nat))
                       (pair (pair nat address) (pair (pair address nat) (pair address nat)))))
           { DUP ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { DROP ; PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} } ;
         DIG 12 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 8 ;
             DIG 9 ;
             DIG 11 ;
             DIG 13 ;
             DROP 9 ;
             IF_LEFT
               { DIG 3 ;
                 DIG 4 ;
                 DROP 2 ;
                 IF_LEFT
                   { SWAP ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     SOME ;
                     DIG 4 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP 2 ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     IF_NONE
                       { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         DROP ;
                         SENDER ;
                         SWAP ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "NOT_PENDING_ADMIN" ; FAILWITH }
                            { NONE address ; SENDER ; PAIR } ;
                         PAIR ;
                         PAIR ;
                         PAIR } ;
                     NIL operation ;
                     PAIR } }
               { SWAP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3 ;
                         SWAP ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         UNPAIR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR }
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 9 ;
                 DIG 13 ;
                 DROP 5 ;
                 SWAP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 6 ;
                     DIG 7 ;
                     DROP 5 ;
                     PUSH string "BAD_DURATION" ;
                     SWAP ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     UNPAIR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 7 ;
                     SWAP ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     DUG 2 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     LEVEL ;
                     COMPARE ;
                     LE ;
                     IF { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          LEVEL ;
                          DUP 4 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          DIG 7 ;
                          SWAP ;
                          EXEC ;
                          MUL ;
                          DUP 3 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 5 ;
                          DUP 5 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 4 ;
                          PAIR ;
                          PAIR ;
                          DIG 5 ;
                          SWAP ;
                          EXEC ;
                          ADD ;
                          ADD }
                        { DIG 5 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 4 ;
                          DUP 4 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          CAR ;
                          CDR ;
                          DIG 3 ;
                          PAIR ;
                          PAIR ;
                          DIG 4 ;
                          SWAP ;
                          EXEC ;
                          ADD } ;
                     SWAP ;
                     CDR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     EDIV ;
                     IF_NONE { PUSH string "Bad amount" ; FAILWITH } {} ;
                     UNPAIR ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP 2 ; NIL operation ; PAIR }
                        { DUP 3 ;
                          CDR ;
                          CAR ;
                          DUP ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          LEVEL ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          LEVEL ;
                          DUP 6 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          CAR ;
                          ADD ;
                          DUP 3 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          DUP ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } } }
               { DIG 2 ;
                 DIG 8 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 9 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 8 ;
                         DIG 9 ;
                         DROP 4 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         DIG 2 ;
                         SWAP ;
                         DIG 2 ;
                         SUB ;
                         ABS ;
                         PUSH nat 10 ;
                         PAIR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         EDIV ;
                         IF_NONE { PUSH string "bad_exponent" ; FAILWITH } {} ;
                         UNPAIR ;
                         PUSH nat 0 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DIG 2 ; DIG 4 ; DROP 4 ; NIL operation ; PAIR }
                            { DUP 4 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              DIG 2 ;
                              DIG 3 ;
                              CAR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 6 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              SOME ;
                              SENDER ;
                              UPDATE ;
                              SWAP ;
                              DUP 3 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SENDER ;
                              DUP 4 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              PAIR ;
                              PAIR ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              DUP 3 ;
                              CDR ;
                              DUP 4 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DUP 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              PAIR ;
                              PAIR ;
                              DIG 3 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              PAIR } }
                       { DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DIG 7 ;
                         DROP 5 ;
                         DIG 4 ;
                         SWAP ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         UNPAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 4 ;
                         DIG 2 ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CDR ;
                         LEVEL ;
                         DUP 4 ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         PUSH nat 1 ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         ADD ;
                         DUP 5 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         DUG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         ADD ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         DIG 2 ;
                         SOME ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         DIG 2 ;
                         CDR ;
                         ADD ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         DUG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PAIR ;
                         SELF_ADDRESS ;
                         SENDER ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } }
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DROP 5 ;
                     UNPAIR ;
                     DIG 6 ;
                     DIG 2 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     UNPAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     PAIR ;
                     DIG 4 ;
                     DUG 2 ;
                     UNPAIR ;
                     DUP 4 ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     GET ;
                     IF_NONE { PUSH string "WRONG_STAKE_INDEX" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     PAIR ;
                     DUP 9 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     SWAP ;
                     COMPARE ;
                     EQ ;
                     IF { DUP 4 ; CAR ; CDR ; CDR ; DIG 5 ; NONE (pair nat nat) ; SWAP ; UPDATE }
                        { DUP 4 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DUP 4 ;
                          DUP 4 ;
                          CAR ;
                          PAIR ;
                          DUP 11 ;
                          SWAP ;
                          EXEC ;
                          PAIR ;
                          SOME ;
                          DIG 6 ;
                          UPDATE } ;
                     DUP 5 ;
                     CDR ;
                     SWAP ;
                     DUP 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DUP 5 ;
                     DIG 7 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DUP 10 ;
                     SWAP ;
                     EXEC ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     DUP 4 ;
                     CDR ;
                     PAIR ;
                     DUP 7 ;
                     SWAP ;
                     EXEC ;
                     DUP 4 ;
                     CAR ;
                     PAIR ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     DIG 2 ;
                     SOME ;
                     SENDER ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     CDR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 4 ;
                     DUG 2 ;
                     SWAP ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     LEVEL ;
                     PAIR ;
                     DUP 8 ;
                     SWAP ;
                     EXEC ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     GET ;
                     IF_NONE { CDR ; CAR } { SWAP ; DROP } ;
                     PUSH nat 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ; PUSH nat 0 }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR } ;
                     DUP ;
                     DIG 2 ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     PUSH nat 0 ;
                     DUP 3 ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ;
                          DROP ;
                          DUP 3 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          PAIR ;
                          SENDER ;
                          SELF_ADDRESS ;
                          PAIR ;
                          PAIR ;
                          DIG 3 ;
                          SWAP ;
                          EXEC }
                        { DIG 4 ;
                          DROP ;
                          NIL (pair address nat) ;
                          DIG 2 ;
                          DUP 5 ;
                          CAR ;
                          CAR ;
                          CDR ;
                          CAR ;
                          CDR ;
                          PAIR ;
                          CONS ;
                          SWAP ;
                          SENDER ;
                          PAIR ;
                          CONS ;
                          DUP 3 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          SELF_ADDRESS ;
                          SWAP ;
                          UNPAIR ;
                          DIG 2 ;
                          DIG 3 ;
                          MAP { UNPAIR ; DUP 5 ; DIG 2 ; SWAP ; PAIR ; SWAP ; PAIR } ;
                          DIG 3 ;
                          DROP ;
                          SWAP ;
                          PAIR ;
                          SWAP ;
                          CONTRACT %transfer
                            (list (pair (address %from_)
                                        (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                          IF_NONE
                            { DROP ; PUSH string "not_fa2" ; FAILWITH }
                            { PUSH mutez 0 ;
                              NIL (pair address (list (pair address (pair nat nat)))) ;
                              DIG 3 ;
                              CONS ;
                              TRANSFER_TOKENS } } ;
                     DUP 3 ;
                     CDR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } } } }

