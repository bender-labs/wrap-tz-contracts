{ parameter
    (or (or (or (or %assets_admin
                   (or (pair %change_tokens_administrator address (list address))
                       (list %confirm_tokens_administrator address))
                   (list %pause_tokens (pair (bool %paused) (bytes %token))))
                (or %contract_admin
                   (or (bool %pause_contract) (address %set_administrator))
                   (address %set_signer)))
            (or (or %governance
                   (or (or (address %set_fees_contract) (address %set_governance))
                       (or (mutez %set_nft_unwrapping_fees) (mutez %set_nft_wrapping_fees)))
                   (or (nat %set_unwrapping_fees) (nat %set_wrapping_fees)))
                (or %signer
                   (or (pair %add_fungible_token (bytes %eth_contract) (pair %token_address address nat))
                       (pair %add_nft (bytes %eth_contract) (address %token_contract)))
                   (or (pair %mint_fungible_token
                          (bytes %erc_20)
                          (pair (pair %event_id (bytes %block_hash) (nat %log_index))
                                (pair (address %owner) (nat %amount))))
                       (pair %mint_nft
                          (bytes %erc_721)
                          (pair (pair %event_id (bytes %block_hash) (nat %log_index))
                                (pair (address %owner) (nat %token_id))))))))
        (or %unwrap
           (pair %unwrap_fungible
              (pair (nat %amount) (bytes %destination))
              (pair (bytes %erc_20) (nat %fees)))
           (pair %unwrap_nft (pair (bytes %destination) (bytes %erc_721)) (nat %token_id)))) ;
  storage
    (pair (pair (pair %admin (pair (address %administrator) (bool %paused)) (address %signer))
                (pair %assets
                   (pair (map %fungible_tokens bytes (pair address nat))
                         (big_map %mints (pair (bytes %block_hash) (nat %log_index)) unit))
                   (map %nfts bytes address)))
          (pair (pair %governance
                   (pair (pair (address %contract) (address %fees_contract))
                         (pair (mutez %nft_unwrapping_fees) (mutez %nft_wrapping_fees)))
                   (pair (nat %unwrapping_fees) (nat %wrapping_fees)))
                (big_map %metadata string bytes))) ;
  code { LAMBDA
           (pair (pair address bool) address)
           unit
           { SENDER ;
             SWAP ;
             CAR ;
             CAR ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_ADMIN" ; FAILWITH } { PUSH unit Unit } } ;
         LAMBDA
           (pair bytes (map bytes (pair address nat)))
           (pair address nat)
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "UNKNOWN_TOKEN" ; FAILWITH } {} } ;
         LAMBDA
           (pair bytes (map bytes address))
           address
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             GET ;
             IF_NONE { PUSH string "UNKNOWN_TOKEN" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (or (list (pair address (pair nat nat))) (list (pair address (pair nat nat)))))
           { CONTRACT %tokens
               (or (list %burn_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount))))
                   (list %mint_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount))))) ;
             IF_NONE { PUSH string "CONTRACT_NOT_COMPATIBLE" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (or (or unit (list (pair nat bool))) address))
           { CONTRACT %admin
               (or (or (unit %confirm_admin) (list %pause (pair (nat %token_id) (bool %paused))))
                   (address %set_admin)) ;
             IF_NONE { PUSH string "CONTRACT_NOT_COMPATIBLE" ; FAILWITH } {} } ;
         LAMBDA
           unit
           unit
           { DROP ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             GT ;
             IF { PUSH string "FORBIDDEN_XTZ" ; FAILWITH } { PUSH unit Unit } } ;
         LAMBDA
           (pair mutez mutez)
           unit
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             COMPARE ;
             LT ;
             IF { PUSH string "FEES_TOO_LOW" ; FAILWITH } { PUSH unit Unit } } ;
         LAMBDA
           address
           (contract unit)
           { CONTRACT unit ;
             IF_NONE { PUSH string "FEES_CONTRACT_NOT_FOUND" ; FAILWITH } {} } ;
         LAMBDA
           (pair (pair bytes nat) (big_map (pair bytes nat) unit))
           unit
           { DUP ;
             CDR ;
             SWAP ;
             CAR ;
             GET ;
             IF_NONE { UNIT } { DROP ; PUSH string "TX_ALREADY_MINTED" ; FAILWITH } } ;
         LAMBDA
           (pair (pair address bool) address)
           unit
           { CAR ;
             CDR ;
             IF { PUSH string "CONTRACT_PAUSED" ; FAILWITH } { PUSH unit Unit } } ;
         DIG 10 ;
         DUP ;
         DUG 11 ;
         CDR ;
         DIG 11 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 5 ;
                 DROP ;
                 IF_LEFT
                   { PUSH unit Unit ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     SWAP ;
                     IF_LEFT
                       { DIG 4 ;
                         DROP ;
                         IF_LEFT
                           { PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             SWAP ;
                             MAP { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   RIGHT (or unit (list (pair nat bool))) ;
                                   TRANSFER_TOKENS } ;
                             SWAP ;
                             DROP ;
                             DIG 3 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             SWAP ;
                             PAIR }
                           { PAIR ;
                             DUP ;
                             CAR ;
                             MAP { DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   PUSH mutez 0 ;
                                   PUSH unit Unit ;
                                   LEFT (list (pair nat bool)) ;
                                   LEFT address ;
                                   TRANSFER_TOKENS } ;
                             DIG 3 ;
                             DROP ;
                             SWAP ;
                             CDR ;
                             SWAP ;
                             PAIR } }
                       { MAP { SWAP ;
                               DUP ;
                               DUG 2 ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               SWAP ;
                               CAR ;
                               CAR ;
                               SWAP ;
                               DUP ;
                               DUG 2 ;
                               CDR ;
                               GET ;
                               IF_NONE
                                 { DROP ; NONE operation }
                                 { DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   SWAP ;
                                   EXEC ;
                                   PUSH mutez 0 ;
                                   NIL (pair nat bool) ;
                                   DIG 4 ;
                                   CAR ;
                                   DIG 4 ;
                                   PAIR ;
                                   CONS ;
                                   RIGHT unit ;
                                   LEFT address ;
                                   TRANSFER_TOKENS ;
                                   SOME } ;
                               IF_NONE
                                 { SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   PAIR ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   SWAP ;
                                   EXEC ;
                                   DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   SWAP ;
                                   EXEC ;
                                   PUSH mutez 0 ;
                                   NIL (pair nat bool) ;
                                   DIG 3 ;
                                   CAR ;
                                   PUSH nat 0 ;
                                   PAIR ;
                                   CONS ;
                                   RIGHT unit ;
                                   LEFT address ;
                                   TRANSFER_TOKENS }
                                 { SWAP ; DROP } } ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         PAIR } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     PUSH unit Unit ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             DIG 2 ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             CDR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ; CAR ; PAIR ; NIL operation ; PAIR } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { DIG 11 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     PUSH unit Unit ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_GOVERNANCE" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { IF_LEFT
                               { PAIR ;
                                 DUP ;
                                 CDR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CDR ;
                                 DIG 3 ;
                                 CAR ;
                                 DIG 3 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 NIL operation ;
                                 PAIR }
                               { PAIR ;
                                 DUP ;
                                 CDR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CDR ;
                                 DIG 2 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 DIG 3 ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 NIL operation ;
                                 PAIR } }
                           { IF_LEFT
                               { PAIR ;
                                 DUP ;
                                 CDR ;
                                 DUP ;
                                 CDR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 CDR ;
                                 CDR ;
                                 DIG 3 ;
                                 CAR ;
                                 PAIR ;
                                 DIG 2 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 NIL operation ;
                                 PAIR }
                               { PAIR ;
                                 DUP ;
                                 CDR ;
                                 DUP ;
                                 CDR ;
                                 DIG 2 ;
                                 CAR ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 CAR ;
                                 CDR ;
                                 CAR ;
                                 PAIR ;
                                 DIG 2 ;
                                 CAR ;
                                 CAR ;
                                 PAIR ;
                                 PAIR ;
                                 NIL operation ;
                                 PAIR } } }
                       { IF_LEFT
                           { PAIR ;
                             DUP ;
                             CDR ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SENDER ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOT_SIGNER" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     IF_LEFT
                       { SWAP ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 3 ;
                         DROP ;
                         DIG 6 ;
                         DROP ;
                         DIG 6 ;
                         DROP ;
                         IF_LEFT
                           { PUSH unit Unit ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             CDR ;
                             CAR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             CDR ;
                             CAR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             SOME ;
                             DIG 4 ;
                             CAR ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR }
                           { PUSH unit Unit ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             CDR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DUP ;
                             CDR ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SOME ;
                             DIG 2 ;
                             CAR ;
                             UPDATE ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { DIG 8 ;
                         DROP ;
                         IF_LEFT
                           { DIG 5 ;
                             DROP ;
                             DIG 5 ;
                             DROP ;
                             DIG 7 ;
                             DROP ;
                             PUSH unit Unit ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             PUSH nat 10000 ;
                             DIG 2 ;
                             CDR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             DUP ;
                             DIG 2 ;
                             SUB ;
                             ISNAT ;
                             IF_NONE { PUSH string "BAD_FEES" ; FAILWITH } {} ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             CAR ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CAR ;
                             PAIR ;
                             DIG 8 ;
                             SWAP ;
                             EXEC ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             CAR ;
                             DIG 8 ;
                             SWAP ;
                             EXEC ;
                             DUG 2 ;
                             DUP ;
                             DUG 3 ;
                             PAIR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             CDR ;
                             DIG 7 ;
                             DUP ;
                             DUG 8 ;
                             CAR ;
                             CDR ;
                             UNIT ;
                             DIG 7 ;
                             CDR ;
                             CAR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIG 7 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             DIG 3 ;
                             PUSH mutez 0 ;
                             PUSH nat 0 ;
                             DIG 7 ;
                             DUP ;
                             DUG 8 ;
                             COMPARE ;
                             GT ;
                             IF { NIL (pair address (pair nat nat)) ;
                                  DIG 7 ;
                                  DIG 7 ;
                                  PAIR ;
                                  DIG 7 ;
                                  CAR ;
                                  CAR ;
                                  CDR ;
                                  PAIR ;
                                  CONS ;
                                  DIG 5 ;
                                  CONS }
                                { DIG 5 ;
                                  DROP ;
                                  DIG 5 ;
                                  DROP ;
                                  DIG 5 ;
                                  DROP ;
                                  NIL (pair address (pair nat nat)) ;
                                  DIG 5 ;
                                  CONS } ;
                             RIGHT (list (pair address (pair nat nat))) ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             PAIR }
                           { DIG 7 ;
                             DROP ;
                             DIG 9 ;
                             DROP ;
                             PAIR ;
                             PAIR ;
                             DUP ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CAR ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             AMOUNT ;
                             PAIR ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             DIG 2 ;
                             DUP ;
                             DUG 3 ;
                             CDR ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CAR ;
                             PAIR ;
                             DIG 7 ;
                             SWAP ;
                             EXEC ;
                             DIG 6 ;
                             SWAP ;
                             EXEC ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             AMOUNT ;
                             PUSH unit Unit ;
                             TRANSFER_TOKENS ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CAR ;
                             CDR ;
                             UNIT ;
                             DIG 5 ;
                             DUP ;
                             DUG 6 ;
                             CDR ;
                             CAR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DIG 5 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             DIG 2 ;
                             PUSH mutez 0 ;
                             NIL (pair address (pair nat nat)) ;
                             PUSH nat 1 ;
                             DIG 6 ;
                             DUP ;
                             DUG 7 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             PAIR ;
                             DIG 6 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             CONS ;
                             RIGHT (list (pair address (pair nat nat))) ;
                             TRANSFER_TOKENS ;
                             CONS ;
                             PAIR } } ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { DIG 3 ;
             DROP ;
             DIG 6 ;
             DROP ;
             DIG 9 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             DIG 2 ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             DIG 2 ;
             CAR ;
             CAR ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 DIG 4 ;
                 DROP ;
                 DIG 6 ;
                 DROP ;
                 PUSH unit Unit ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 PUSH nat 10000 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CDR ;
                 CAR ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CAR ;
                 MUL ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 PUSH nat 1 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "AMOUNT_TOO_SMALL" ; FAILWITH } {} ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 COMPARE ;
                 LT ;
                 IF { PUSH string "FEES_TOO_LOW" ; FAILWITH } {} ;
                 DUP ;
                 PUSH mutez 0 ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CDR ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 CAR ;
                 CAR ;
                 ADD ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 PAIR ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 LEFT (list (pair address (pair nat nat))) ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 5 ;
                 CDR ;
                 CDR ;
                 DIG 5 ;
                 PAIR ;
                 DIG 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 CONS ;
                 RIGHT (list (pair address (pair nat nat))) ;
                 TRANSFER_TOKENS ;
                 DIG 2 ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 DIG 2 ;
                 CONS ;
                 PAIR }
               { DIG 6 ;
                 DROP ;
                 DIG 8 ;
                 DROP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 AMOUNT ;
                 PAIR ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 DIG 7 ;
                 SWAP ;
                 EXEC ;
                 DIG 6 ;
                 SWAP ;
                 EXEC ;
                 PUSH mutez 0 ;
                 NIL (pair address (pair nat nat)) ;
                 PUSH nat 1 ;
                 DIG 4 ;
                 CDR ;
                 PAIR ;
                 SENDER ;
                 PAIR ;
                 CONS ;
                 LEFT (list (pair address (pair nat nat))) ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 AMOUNT ;
                 PUSH unit Unit ;
                 TRANSFER_TOKENS ;
                 DIG 2 ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 DIG 2 ;
                 CONS ;
                 PAIR } ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DIG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             SWAP ;
             PAIR } } }

