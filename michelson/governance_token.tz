{ parameter
    (or (or (or %admin
               (or (unit %confirm_admin) (list %pause (pair (nat %token_id) (bool %paused))))
               (or (address %set_admin) (address %set_minter)))
            (or %assets
               (or (pair %balance_of
                      (list %requests (pair (address %owner) (nat %token_id)))
                      (contract %callback
                         (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
                   (list %transfer
                      (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
               (list %update_operators
                  (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                      (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))))
        (or (or %oracle
               (or (unit %confirm_oracle_migration)
                   (list %distribute (pair (address %to_) (nat %amount))))
               (address %migrate_oracle))
            (or %tokens
               (list %burn_tokens (pair (address %owner) (nat %token_id) (nat %amount)))
               (list %mint_tokens (pair (address %owner) (nat %token_id) (nat %amount)))))) ;
  storage
    (pair (pair (pair %admin
                   (pair (address %admin) (address %minter))
                   (pair (bool %paused) (option %pending_admin address)))
                (pair %assets
                   (pair (big_map %ledger address nat)
                         (big_map %operators (pair (address %owner) (address %operator)) unit))
                   (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                         (nat %total_supply))))
          (pair (big_map %metadata string bytes)
                (pair %oracle
                   (pair (nat %distributed) (nat %max_supply))
                   (pair %role (address %contract) (option %pending_contract address))))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (pair address address) (pair bool (option address)))
           (pair (pair address address) (pair bool (option address)))
           { DUP ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { DROP ; PUSH string "NOT_AN_ADMIN" ; FAILWITH } {} } ;
         PUSH nat 0 ;
         LAMBDA
           (pair (pair (pair (pair address address) (pair bool (option address)))
                       (pair (pair (big_map address nat) (big_map (pair address address) unit))
                             (pair (big_map nat (pair nat (map string bytes))) nat)))
                 (pair (big_map string bytes) (pair (pair nat nat) (pair address (option address)))))
           (pair (pair (pair (pair address address) (pair bool (option address)))
                       (pair (pair (big_map address nat) (big_map (pair address address) unit))
                             (pair (big_map nat (pair nat (map string bytes))) nat)))
                 (pair (big_map string bytes) (pair (pair nat nat) (pair address (option address)))))
           { DUP ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {} { DROP ; PUSH string "UNAUTHORIZED" ; FAILWITH } } ;
         DIG 4 ;
         UNPAIR ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         GT ;
         IF { DROP 6 ; PUSH string "FORBIDDEN_XTZ" ; FAILWITH }
            { IF_LEFT
                { DIG 2 ;
                  DROP ;
                  IF_LEFT
                    { DIG 2 ;
                      DIG 4 ;
                      DROP 2 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      SWAP ;
                      IF_LEFT
                        { IF_LEFT
                            { DIG 3 ;
                              DROP 2 ;
                              DUP ;
                              CDR ;
                              CDR ;
                              IF_NONE
                                { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                                { SENDER ;
                                  COMPARE ;
                                  EQ ;
                                  IF { NONE address ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       CAR ;
                                       PAIR ;
                                       SWAP ;
                                       CAR ;
                                       CDR ;
                                       SENDER ;
                                       PAIR ;
                                       PAIR }
                                     { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                              NIL operation ;
                              PAIR }
                            { SWAP ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              SWAP ;
                              PUSH bool True ;
                              SWAP ;
                              ITER { CDR ; AND } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } }
                        { IF_LEFT
                            { SWAP ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              SWAP ;
                              SOME ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              NIL operation ;
                              PAIR }
                            { SWAP ;
                              DIG 3 ;
                              SWAP ;
                              EXEC ;
                              DUP ;
                              CDR ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } } ;
                      UNPAIR ;
                      DUP 3 ;
                      CDR ;
                      DIG 3 ;
                      CAR ;
                      CDR ;
                      DIG 3 ;
                      PAIR ;
                      PAIR ;
                      SWAP ;
                      PAIR }
                    { DIG 3 ;
                      DROP ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CAR ;
                      IF { PUSH string "PAUSED" ; FAILWITH } {} ;
                      IF_LEFT
                        { IF_LEFT
                            { DUP ;
                              CAR ;
                              MAP { DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CDR ;
                                    SWAP ;
                                    DROP ;
                                    DUP 5 ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    COMPARE ;
                                    EQ ;
                                    IF { DROP } { DROP ; UNIT ; DUP 6 ; PAIR ; FAILWITH } ;
                                    DUP 3 ;
                                    CAR ;
                                    CDR ;
                                    CAR ;
                                    CAR ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    CAR ;
                                    GET ;
                                    IF_NONE { PUSH nat 0 } {} ;
                                    SWAP ;
                                    PAIR } ;
                              DIG 3 ;
                              DIG 4 ;
                              DROP 2 ;
                              SWAP ;
                              CDR ;
                              PUSH mutez 0 ;
                              DIG 2 ;
                              TRANSFER_TOKENS ;
                              SWAP ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              PAIR }
                            { ITER { DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     ITER { SWAP ;
                                            DUP ;
                                            DUP 4 ;
                                            CAR ;
                                            DUP ;
                                            SENDER ;
                                            COMPARE ;
                                            EQ ;
                                            IF { SWAP ; DROP }
                                               { SENDER ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 PAIR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 CDR ;
                                                 SWAP ;
                                                 MEM ;
                                                 IF {} { DROP ; UNIT ; PUSH string "FA2_NOT_OPERATOR" ; PAIR ; FAILWITH } } ;
                                            PUSH nat 0 ;
                                            DUP 4 ;
                                            GET 4 ;
                                            COMPARE ;
                                            EQ ;
                                            IF { DIG 2 ; DROP 2 }
                                               { DUP 5 ;
                                                 DUP 4 ;
                                                 GET 3 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DUP 3 ; GET 3 } { DUP 6 ; FAILWITH } ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 CDR ;
                                                 CAR ;
                                                 CAR ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 PAIR ;
                                                 DIG 2 ;
                                                 DUP 5 ;
                                                 GET 4 ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 DUP ;
                                                 DUP 4 ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 0 } {} ;
                                                 DUP 3 ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 SUB ;
                                                 ISNAT ;
                                                 IF_NONE
                                                   { SWAP ;
                                                     DIG 3 ;
                                                     DROP 2 ;
                                                     SWAP ;
                                                     PAIR ;
                                                     PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                                     PAIR ;
                                                     FAILWITH }
                                                   { SWAP ;
                                                     DIG 3 ;
                                                     DROP 2 ;
                                                     PUSH nat 0 ;
                                                     SWAP ;
                                                     DUP ;
                                                     DUG 2 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     IF { DROP ; SWAP ; NONE nat ; SWAP ; UPDATE } { SOME ; DIG 2 ; UPDATE } } ;
                                                 SWAP ;
                                                 PAIR ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 DIG 3 ;
                                                 GET 4 ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 DUP 4 ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 0 } {} ;
                                                 ADD ;
                                                 PUSH nat 0 ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DROP ; SWAP ; NONE nat ; SWAP ; UPDATE } { SOME ; DIG 2 ; UPDATE } ;
                                                 SWAP ;
                                                 DUP ;
                                                 DUG 2 ;
                                                 CDR ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 CDR ;
                                                 UNPAIR ;
                                                 CDR ;
                                                 DIG 3 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 CAR ;
                                                 PAIR ;
                                                 PAIR } } ;
                                     SWAP ;
                                     DROP } ;
                              SWAP ;
                              DIG 2 ;
                              DROP 2 ;
                              NIL operation ;
                              PAIR } }
                        { DIG 3 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          ITER { IF_LEFT { UNIT ; SOME ; PAIR } { NONE unit ; PAIR } ;
                                 UNPAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET 4 ;
                                 DUP 6 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DROP } { DROP ; PUSH string "OPERATION_PROHIBITED" ; FAILWITH } ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DUP 3 ;
                                      CDR ;
                                      DUP 4 ;
                                      CAR ;
                                      CDR ;
                                      DIG 2 ;
                                      DUP 4 ;
                                      GET 3 ;
                                      DIG 4 ;
                                      CAR ;
                                      PAIR ;
                                      UPDATE ;
                                      DIG 2 ;
                                      CAR ;
                                      CAR ;
                                      PAIR ;
                                      PAIR }
                                    { DROP 3 ; PUSH string "FA2_NOT_OWNER" ; FAILWITH } } ;
                          DIG 2 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SWAP ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } } }
                { DIG 4 ;
                  DIG 5 ;
                  DROP 2 ;
                  IF_LEFT
                    { IF_LEFT
                        { IF_LEFT
                            { DIG 2 ;
                              DIG 3 ;
                              DROP 3 ;
                              DUP ;
                              CDR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              IF_NONE
                                { PUSH string "NO_RUNNING_MIGRATION" ; FAILWITH }
                                { SENDER ;
                                  SWAP ;
                                  DUP ;
                                  DUG 2 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { NONE address ; SWAP ; PAIR }
                                     { DROP ; PUSH string "WRONG_MIGRATION" ; FAILWITH } } ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              SWAP ;
                              CAR ;
                              PAIR ;
                              NIL operation ;
                              PAIR }
                            { SWAP ;
                              DIG 2 ;
                              SWAP ;
                              EXEC ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CDR ;
                              PUSH nat 0 ;
                              PAIR ;
                              SWAP ;
                              ITER { SWAP ;
                                     UNPAIR ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     CDR ;
                                     DUP 3 ;
                                     CAR ;
                                     CAR ;
                                     DUP 7 ;
                                     PAIR ;
                                     DUP 5 ;
                                     CAR ;
                                     DUP 6 ;
                                     CDR ;
                                     DUP ;
                                     DUG 3 ;
                                     DIG 2 ;
                                     CDR ;
                                     DUP ;
                                     DUG 2 ;
                                     DUP 4 ;
                                     GET ;
                                     IF_NONE { PUSH nat 0 } {} ;
                                     ADD ;
                                     PUSH nat 0 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DROP ; SWAP ; NONE nat ; SWAP ; UPDATE } { SOME ; DIG 2 ; UPDATE } ;
                                     SWAP ;
                                     DIG 2 ;
                                     ADD ;
                                     SWAP ;
                                     DUP 4 ;
                                     CDR ;
                                     DIG 4 ;
                                     CAR ;
                                     CDR ;
                                     DIG 2 ;
                                     PAIR ;
                                     PAIR ;
                                     DUP ;
                                     DUG 2 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     SWAP ;
                                     CAR ;
                                     PAIR ;
                                     DIG 2 ;
                                     CDR ;
                                     DIG 2 ;
                                     ADD ;
                                     PAIR } ;
                              DIG 2 ;
                              DROP ;
                              UNPAIR ;
                              DUP 3 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              ADD ;
                              DUP 3 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              LE ;
                              IF { DUP 3 ;
                                   CDR ;
                                   DIG 2 ;
                                   DUP 4 ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   PAIR ;
                                   DIG 2 ;
                                   CDR ;
                                   CDR ;
                                   UNPAIR ;
                                   CDR ;
                                   DIG 3 ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   DUP ;
                                   DUG 2 ;
                                   CDR ;
                                   CAR ;
                                   PAIR ;
                                   SWAP ;
                                   CAR ;
                                   PAIR ;
                                   NIL operation ;
                                   PAIR }
                                 { DROP 3 ; PUSH string "RESERVE_DEPLETED" ; FAILWITH } } }
                        { DIG 3 ;
                          DROP ;
                          SWAP ;
                          DIG 2 ;
                          SWAP ;
                          EXEC ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          SWAP ;
                          CAR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } }
                    { DIG 2 ;
                      DROP ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CAR ;
                      DUP ;
                      CAR ;
                      CDR ;
                      SENDER ;
                      COMPARE ;
                      NEQ ;
                      IF { DROP ; PUSH string "NOT_A_MINTER" ; FAILWITH } { DROP } ;
                      IF_LEFT
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          ITER { DUP ;
                                 DUG 2 ;
                                 GET 3 ;
                                 DUP 6 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { DROP ; PUSH string "BAD_MINT_BURN" ; FAILWITH } ;
                                 PAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 DIG 2 ;
                                 GET 4 ;
                                 DIG 2 ;
                                 CDR ;
                                 DUP ;
                                 DUP 4 ;
                                 GET ;
                                 IF_NONE { PUSH nat 0 } {} ;
                                 DUP 3 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 SUB ;
                                 ISNAT ;
                                 IF_NONE
                                   { SWAP ;
                                     DIG 3 ;
                                     DROP 2 ;
                                     SWAP ;
                                     PAIR ;
                                     PUSH string "FA2_INSUFFICIENT_BALANCE" ;
                                     PAIR ;
                                     FAILWITH }
                                   { SWAP ;
                                     DIG 3 ;
                                     DROP 2 ;
                                     PUSH nat 0 ;
                                     SWAP ;
                                     DUP ;
                                     DUG 2 ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DROP ; SWAP ; NONE nat ; SWAP ; UPDATE } { SOME ; DIG 2 ; UPDATE } } } ;
                          DIG 3 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SWAP ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR }
                        { SWAP ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CDR ;
                          DUP ;
                          DUG 2 ;
                          CAR ;
                          CAR ;
                          SWAP ;
                          ITER { DUP ;
                                 DUG 2 ;
                                 GET 3 ;
                                 DUP 6 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF {} { DROP ; PUSH string "BAD_MINT_BURN" ; FAILWITH } ;
                                 PAIR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 CAR ;
                                 DIG 2 ;
                                 GET 4 ;
                                 DIG 2 ;
                                 CDR ;
                                 DUP ;
                                 DUG 2 ;
                                 DUP 4 ;
                                 GET ;
                                 IF_NONE { PUSH nat 0 } {} ;
                                 ADD ;
                                 PUSH nat 0 ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 COMPARE ;
                                 EQ ;
                                 IF { DROP ; SWAP ; NONE nat ; SWAP ; UPDATE } { SOME ; DIG 2 ; UPDATE } } ;
                          DIG 3 ;
                          DROP ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          DIG 2 ;
                          CAR ;
                          CDR ;
                          DIG 2 ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          DUP ;
                          DUG 2 ;
                          CDR ;
                          SWAP ;
                          DIG 2 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          NIL operation ;
                          PAIR } } } } } }

